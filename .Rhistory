library(simmer)
library(dplyr)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
rnorm(10, 10, 2)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
View(results)
View(results)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
View(attributes)
View(results)
get_mon_arrivals(env, per_resource = T)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
View(attributes)
View(results)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
View(attributes)
get_mon_arrivals(env, per_resource = T)
arrange(get_mon_attributes(env),name,key,time)
env %>%
create_counters(counters) %>%
add_generator("customer",customer,function() rnorm(10, 10, 2), mon=2) %>%
run(100) %>% wrap()
get_mon_arrivals(env, per_resource = T)
arrange(get_mon_attributes(env),name,key,time)
env
summary(env)
list(env)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
get_mon_arrivals(env, per_resource = T)
arrange(get_mon_attributes(env),name,key,time)
env %>%
create_counters(counters) %>%
add_generator("customer",customer,function() rnorm(10, 5, 2), mon=2) %>%
run(50) %>% wrap()
get_mon_arrivals(env, per_resource = T)
arrange(get_mon_attributes(env),name,key,time)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
source('~/Desktop/simmer-play/simmer_play.R', echo=TRUE)
summary(customer)
customer
customer$activate()
names(customer)
customer[["name"m1]]
customer[["name",11]]
customer[name,1]
customer[(name,1)
library(simmer)
library(dplyr)
rm(list=ls())
set.seed(1234)
my_global <- NA
t0 <- create_trajectory() %>%
timeout(function() { print(my_global); 0 })
t1 <- create_trajectory() %>%
timeout(function() {
my_global <<- runif(1) # don't forget the double-assigment operator!
1 }) %>%
join(t0)
t2 <- create_trajectory() %>%
timeout(1) %>%
join(t0)
simmer() %>%
add_generator("t1_", t1, at(0)) %>%
add_generator("t2_", t2, at(0)) %>%
run
my_global
rm(list=ls())
set.seed(1234)
my_global <- NA
t0 <- trajectory() %>%
timeout(function() { print(my_global); 0 })
t1 <- trajectory() %>%
timeout(function() {
my_global <<- runif(1) # don't forget the double-assigment operator!
1 }) %>%
join(t0)
t2 <- trajectory() %>%
timeout(1) %>%
join(t0)
simmer() %>%
add_generator("t1_", t1, at(0)) %>%
add_generator("t2_", t2, at(0)) %>%
run
my_global
get_mon_arrivals(env, per_resource = T)
rm(list=ls())
set.seed(1234)
env <- simmer("play", verbose = TRUE)
my_global <- NA
t0 <- trajectory() %>%
timeout(function() { print(my_global); 0 })
t1 <- trajectory() %>%
timeout(function() {
my_global <<- runif(1) # don't forget the double-assigment operator!
1 }) %>%
join(t0)
t2 <- trajectory() %>%
timeout(1) %>%
join(t0)
env %>%
add_generator("t1_", t1, at(0)) %>%
add_generator("t2_", t2, at(0)) %>%
run
my_global
get_mon_arrivals(env, per_resource = T)
rm(list=ls())
set.seed(1234)
env <- simmer("play", verbose = TRUE)
my_global <- NA
t0 <- trajectory() %>%
timeout(function() { print(my_global); 0 })
t1 <- trajectory() %>%
timeout(function() {
my_global <<- runif(1) # don't forget the double-assigment operator!
1 }) %>%
join(t0)
t2 <- trajectory() %>%
timeout(1) %>%
join(t0)
env %>%
add_generator("t1_", t1, at(0,1)) %>%
add_generator("t2_", t2, at(0)) %>%
run
my_global
rm(list=ls())
set.seed(1234)
env <- simmer("play", verbose = TRUE)
my_global <- NA
t0 <- trajectory() %>%
seize("nurse") %>%
timeout(function() { print(my_global); 0 }) %>%
release("nurse")
t1 <- trajectory() %>%
seize("nurse") %>%
timeout(function() {
my_global <<- runif(1) # don't forget the double-assigment operator!
1 }) %>%
release("nurse")
join(t0)
t2 <- trajectory() %>%
timeout(1) %>%
join(t0)
env %>% add_resource("nurse", 1) %>%
add_generator("t1_", t1, at(0,1)) %>%
add_generator("t2_", t2, at(0)) %>%
run
my_global
rm(list=ls())
env <- simmer("play", verbose = TRUE)
my_global <- NA
t0 <- trajectory() %>%
seize("nurse") %>%
timeout(function() { print(my_global); 0 }) %>%
release("nurse")
t1 <- trajectory() %>%
seize("nurse") %>%
timeout(function() {
my_global <<- runif(1) # don't forget the double-assigment operator!
1 }) %>%
release("nurse")
join(t0)
t2 <- trajectory() %>%
timeout(1)
env %>% add_resource("nurse", 1) %>%
add_generator("t1_", t1, at(0,1)) %>%
add_generator("t2_", t2, at(0)) %>%
run(15)
get_mon_arrivals(env, per_resource = T)
my_global
rm(list=ls())
env <- simmer("play", verbose = TRUE)
my_global <- NA
t0 <- trajectory() %>%
seize("nurse") %>%
timeout(function() { print(my_global); 0 }) %>%
release("nurse")
t1 <- trajectory() %>%
seize("nurse") %>%
timeout(function() {
my_global <<- runif(1) # don't forget the double-assigment operator!
1 }) %>%
release("nurse")
join(t0)
env %>% add_resource("nurse", 1) %>%
add_generator("t1_", t1, at(0,1)) %>%
run(15)
get_mon_arrivals(env, per_resource = T)
my_global
rm(list=ls())
env <- simmer("play", verbose = TRUE)
my_global <- NA
t0 <- trajectory() %>%
seize("nurse") %>%
timeout(function() { print(my_global); 0 }) %>%
release("nurse")
t1 <- trajectory() %>%
seize("nurse") %>%
timeout(function() {
my_global <<- runif(1) # don't forget the double-assigment operator!
1 }) %>%
release("nurse")
join(t0)
env %>% add_resource("nurse", 1) %>%
add_generator("t1_", t1, at(0,1,2,4,5)) %>%
run(15)
get_mon_arrivals(env, per_resource = T)
my_global
t <- create_trajectory() %>%
set_attribute("example", function() runif(1)) %>%
timeout(1) %>%
timeout(function(attr) { print(attr[["example"]]); 0 })
simmer() %>%
add_generator("arrival", t, at(0, 0)) %>%
run
rm(list=ls())
env <- simmer("play", verbose = TRUE)
t <- trajectory() %>%
set_attribute("example", function() runif(1)) %>%
timeout(1) %>%
timeout(function(attr) { print(attr[["example"]]); 0 })
simmer() %>%
add_generator("arrival", t, at(0, 0)) %>%
run
rm(list=ls())
env <- simmer("play", verbose = TRUE)
my_global <- NA
t0 <- trajectory() %>%
timeout(function() { print(my_global); 0 })
t1 <- trajectory() %>%
timeout(function() {
my_global <<- runif(1) # don't forget the double-assigment operator!
1 }) %>%
join(t0) %>%
rollback(amount=2, times=10)
t2 <- create_trajectory() %>%
timeout(1) %>%
join(t0)
env %>%
add_generator("t1_", t1, at(0)) %>%
run
get_mon_arrivals(env, per_resource = T)
my_global
rm(list=ls())
env <- simmer("play", verbose = TRUE)
my_global <- NA
t0 <- trajectory() %>%
timeout(function() { print(my_global); 0 })
t1 <- trajectory() %>%
timeout(function() {
my_global <<- runif(1) # don't forget the double-assigment operator!
1 }) %>%
join(t0) %>%
rollback(amount=2, times=10)
t2 <- create_trajectory() %>%
timeout(1) %>%
join(t0)
env %>%
add_generator("t1_", t1, at(0,1,2)) %>%
run
my_global
rm(list=ls())
env <- simmer("play", verbose = TRUE)
my_global <- NA
t1 <- trajectory() %>%
timeout(function() {
my_global <<- runif(1) # don't forget the double-assigment operator!
1 }) %>%
rollback(amount=1, times=10)
env %>%
add_generator("t1_", t1, at(0,1,2)) %>%
run
my_global
rm(list=ls())
env <- simmer("play", verbose = TRUE)
my_global <- NA
t1 <- trajectory() %>%
timeout(function() {
my_global <<- runif(10) # don't forget the double-assigment operator!
1 }) %>%
rollback(amount=1, times=10)
env %>%
add_generator("t1_", t1, at(0,1,2)) %>%
run
my_global
rm(list=ls())
env <- simmer("play", verbose = TRUE)
my_global <- NA
t1 <- trajectory() %>%
timeout(5) %>%
timeout(function() {
my_global <<- runif(1) # don't forget the double-assigment operator!
}) %>%
rollback(amount=2, times=10)
env %>%
add_generator("t1_", t1, at(0,1,2)) %>%
run
my_global
# get_mon_arrivals(env, per_resource = T)
env <- simmer("play", verbose = TRUE)
my_global <- NA
t1 <- trajectory() %>%
timeout(5) %>%
timeout(function() {
my_global <<- runif(1) # don't forget the double-assigment operator!
}) %>%
rollback(amount=2, times=10)
env %>%
add_generator("t1_", t1, at(0,1,2)) %>%
run(15)
my_global
library(dplyr)
signal <- data.frame(fuid=c(1,2,3),test=c(1,1,1))
signal
rm(list=ls())
env <- simmer("play", verbose = TRUE)
my_global <- NA
t1 <- trajectory() %>%
timeout(5) %>%
timeout(function() {
my_global <<- runif(1); # don't forget the double-assigment operator!
0
}) %>%
rollback(amount=2, times=10)
env %>%
add_generator("t1_", t1, at(0,1,2)) %>%
run(15)
my_global
install.packages("simmer")
install.packages("simmer")
install.packages("simmer")
install.packages("simmer")
